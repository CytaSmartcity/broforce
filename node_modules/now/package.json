{
  "_args": [
    [
      {
        "raw": "now",
        "scope": null,
        "escapedName": "now",
        "name": "now",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/stephaniaeliskarasamani/notifine"
    ]
  ],
  "_from": "now@latest",
  "_id": "now@9.3.3",
  "_inCache": true,
  "_location": "/now",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/now_9.3.3_1518993966999_0.4897988265152571"
  },
  "_npmUser": {
    "name": "leo",
    "email": "leo@zeit.co"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "now",
    "scope": null,
    "escapedName": "now",
    "name": "now",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/now/-/now-9.3.3.tgz",
  "_shasum": "356184b822c429c0efc725a23b69aad1b9257dbb",
  "_shrinkwrap": null,
  "_spec": "now",
  "_where": "/Users/stephaniaeliskarasamani/notifine",
  "ava": {
    "failFast": true,
    "files": [
      "test/*.js"
    ]
  },
  "babel": {
    "plugins": [
      "transform-flow-comments"
    ]
  },
  "bin": {
    "now": "download/dist/now"
  },
  "bugs": {
    "url": "https://github.com/zeit/now-cli/issues"
  },
  "dependencies": {},
  "description": "The command-line interface for Now",
  "devDependencies": {
    "@google/maps": "0.4.3",
    "@zeit/check-updates": "1.1.0",
    "alpha-sort": "2.0.1",
    "ansi-escapes": "3.0.0",
    "archiver": "2.0.3",
    "arr-flatten": "1.1.0",
    "async-retry": "1.1.3",
    "async-sema": "1.2.0",
    "ava": "0.22.0",
    "aws-sdk": "2.124.0",
    "babel-core": "6.26.0",
    "babel-eslint": "8.0.1",
    "babel-loader": "7.1.2",
    "babel-plugin-transform-async-to-generator": "6.24.1",
    "babel-plugin-transform-flow-comments": "6.22.0",
    "babel-plugin-transform-runtime": "6.23.0",
    "babel-preset-env": "1.6.0",
    "bytes": "3.0.0",
    "chalk": "2.1.0",
    "child-process-promise": "2.2.1",
    "clipboardy": "1.1.4",
    "convert-stream": "1.0.2",
    "copy-webpack-plugin": "4.0.1",
    "credit-card": "3.0.1",
    "cross-spawn": "5.1.0",
    "dateformat": "3.0.2",
    "death": "1.1.0",
    "debug": "3.1.0",
    "deployment-type": "1.0.1",
    "docker-file-parser": "1.0.2",
    "dotenv": "4.0.0",
    "download": "6.2.5",
    "email-prompt": "0.3.1",
    "email-validator": "1.1.1",
    "epipebomb": "1.0.0",
    "eslint": "4.7.2",
    "eslint-plugin-flowtype": "2.36.0",
    "fetch-h2": "0.0.12",
    "flow-babel-webpack-plugin": "1.1.0",
    "fs-extra": "4.0.2",
    "glob": "7.1.2",
    "ignore": "3.3.5",
    "ini": "1.3.4",
    "inquirer": "3.3.0",
    "is-url": "1.2.2",
    "jsonlines": "0.1.1",
    "lint-staged": "4.2.3",
    "load-json-file": "3.0.0",
    "lodash.range": "3.2.0",
    "mkdirp-promise": "5.0.1",
    "mri": "1.1.0",
    "ms": "2.0.0",
    "node-fetch": "1.7.3",
    "opn": "5.1.0",
    "ora": "1.3.0",
    "pipe-streams-to-promise": "0.2.0",
    "pkg": "4.3.0",
    "pluralize": "7.0.0",
    "pre-commit": "1.2.2",
    "prettier": "1.7.2",
    "printf": "0.2.5",
    "progress": "2.0.0",
    "psl": "1.1.20",
    "read-pkg": "2.0.0",
    "shebang-loader": "0.0.1",
    "single-line-log": "1.1.2",
    "socket.io-client": "1.7.4",
    "split-array": "1.0.1",
    "strip-ansi": "4.0.0",
    "stripe": "5.1.0",
    "tar-fs": "1.15.3",
    "then-sleep": "1.0.1",
    "through2": "2.0.3",
    "tmp-promise": "1.0.3",
    "uid-promise": "1.0.0",
    "webpack": "3.6.0",
    "webpack-node-externals": "1.6.0",
    "which-promise": "1.0.0",
    "write-json-file": "2.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-cUsZhJIRo2N62/IKwKai/JeKU4STglms+hmIeCHvZWEko3c4vN/MC3DS/PlqghMZtDG/3CfNOfj4ealaMCwN8Q==",
    "shasum": "356184b822c429c0efc725a23b69aad1b9257dbb",
    "tarball": "https://registry.npmjs.org/now/-/now-9.3.3.tgz",
    "fileCount": 6,
    "unpackedSize": 703373
  },
  "eslintConfig": {
    "parserOptions": {
      "ecmaVersion": 8,
      "sourceType": "script"
    },
    "parser": "babel-eslint",
    "extends": [
      "eslint:recommended",
      "plugin:flowtype/recommended"
    ],
    "plugins": [
      "flowtype"
    ],
    "env": {
      "es6": true,
      "node": true
    },
    "rules": {
      "func-names": 0,
      "no-console": 0,
      "no-shadow": 0,
      "no-extra-semi": 0,
      "no-empty": 0
    }
  },
  "eslintIgnore": [
    "download",
    "dist",
    "test/_fixtures"
  ],
  "files": [
    "download/dist",
    "download/install.js"
  ],
  "gitHead": "44fd600abb91cbe3eaf5bf6cf5d3613ec9ff9887",
  "homepage": "https://github.com/zeit/now-cli#readme",
  "license": "Apache-2.0",
  "lint-staged": {
    "*.js": [
      "npm run lint",
      "prettier --write --single-quote --no-semi",
      "git add"
    ]
  },
  "maintainers": [
    {
      "name": "igorklopov",
      "email": "igor@klopov.com"
    },
    {
      "name": "jamo",
      "email": "jamo@isotalo.fi"
    },
    {
      "name": "leo",
      "email": "leo@zeit.co"
    },
    {
      "name": "matheuss",
      "email": "me@matheus.top"
    },
    {
      "name": "nkzawa",
      "email": "naoyuki.kanezawa@gmail.com"
    },
    {
      "name": "rase-",
      "email": "tonykovanen@hotmail.com"
    },
    {
      "name": "rauchg",
      "email": "rauchg@gmail.com"
    }
  ],
  "name": "now",
  "optionalDependencies": {},
  "pkg": {
    "scripts": [
      "dist/*"
    ],
    "targets": [
      "node9-alpine-x64",
      "node9-linux-x64",
      "node9-macos-x64",
      "node9-win-x64"
    ]
  },
  "readme": "![now](https://github.com/zeit/art/blob/a7867d60f54a41127023a8740a221921df309d24/now-cli/repo-banner.png?raw=true)\n\n[![Build Status](https://travis-ci.org/zeit/now-cli.svg?branch=master)](https://travis-ci.org/zeit/now-cli)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\n## Usage\n\nNow enables instant immutable deployments to **any cloud provider**\nwith a simple API that's scalable, intuitive and optimized for collaboration.\n\nThis is all it takes to deploy, for example, a Node.js project:\n\n```\ncd my-project\ncat server.js\n```\n\n```js\nrequire('http').createServer((req, res) => {\n  res.end('▲ Hello World')\n}).listen(process.env.PORT)\n```\n\nand deploy!\n\n```\nnow\n```\n\nThe output of the `now` command will be a unique url to the deployment. No need for git.\n\n## Features\n\n- **Single command deployment**: `now`.\n- **100% OSS** and licensed under Apache 2.0\n- **Serverless**. Worry about code, not servers.\n- **Immutable**. Every time you write `now`, a new deployment is provisioned.\n- **Pluggable**. Client can query any public and private cloud provider APIs\n- **Flexible**. Interact with multiple clouds at once: `now gcp deploy && now aws deploy`\n- **Single command setup**: `now [provider] login`\n- **Secure**. All deployments are served over SSL\n- **Dynamic and Static**. Deploy popular runtimes or static websites\n- **Remote fs support**. Deploy any github project with `now project/repo`, gitlab with `gitlab://`. [PRs welcome](https://github.com/zeit/now-cli/pulls)!\n\n## Installation\n\nTo get the latest version, run this command:\n\n```\nnpm install -g now\n```\n\nNote: while the API has been in production for over a year, the different\nproviders are still under heavy development\n\nOptionally, you can clone this repo and run `npm run build` to\nproduce the [pkg](https://github.com/zeit/pkg) binaries.\n\n## Setup\n\nConfiguration of one or more providers via `login` command is necessary.\n\nGlobal configuration is stored as `~/.now/config.json`. Your default provider will be the first one you log in to. If you are logged into multiple providers and want to set default provider, run:\n\n```\nnow config set defaultProvider gcp\n```\n\n### Now.sh\n\n```\nnow login\n```\n\nTo skip the configuration steps and deploy to `https://now.sh`\nexecute `now login` without any parameters, defaulting to the `sh` provider (equivalent to: `now sh login`).\n\n[Now.sh](https://zeit.co/now) is _**free** for open-source projects and static deployments_. It supports `Dockerfile`, `package.json` and static sites out of the box. All builds are reproducible and executed in the cloud.\n\n### AWS Lambda (`aws`)\n\nRun:\n\n```\nnow aws login\n```\n\nIf you have already run `aws configure` before, you will be offered\nto synchronize your credentials.\n\nServerless deployments are provisioned by using:\n\n- Lambda functions λ\n\t- A proxy is automatically used to bridge the API between\n\t  HTTP and lambda functions and retain a consistent interface\n- Certificate Manager\n- API Gateway\n\n### Google Cloud Platform (`gcp`)\n\n```\n$ now gcp login\n```\n\nand follow the instructions!\n\n### Microsoft Azure (`az`)\n\n```\n$ now az login\n```\n\nand follow the instructions!\n\n## <span id=\"configuration\">Project Configuration</span>\n\n<table>\n<td>ℹ️</td><td>We welcome feedback from <a href=\"#community\">the community</a>!</td>\n</table>\n\nThe v1 release of `now.json` includes the following specification:\n\n- `name` (optional, recommended) `String`\n- `description` (optional, recommended) `String`\n- `type` (optional, recommended). One of:\n  - `String` an unique identifier for the project type. The following\n    are recommended choices to be supported by every provider:\n      - `docker`\n      - `node`\n      - `static`\n  - `Object`\n    when it's necessary to specify a version or multiple interacting runtimes. It's a dictionary of runtime identifier and [SemVer-compatible]() version. For example:\n    ```\n    { \"type\": { \"docker\": \"1.x.x\" } }\n    ```\n  - `provider` (optional) indicates affinity to a certain provider\n- `target` (optional) `String`\n  - specifies a directory or file to deploy. If relative, it's resolved\n    to the project directory. This is useful when a certain\n    deployment type (like `static`) has an output target, like an `out`\n    or `dist` directory.\n- `env` (optional). One of\n  - `Object` a dictionary mapping the name of the environmental variable\n    to expose to the deployment and its value.\n    If the value begins with `@`, it's considered a\n  - `Array` a list of suggested environmental variables that the project\n    _might_ require to be deployed and function correctly\n- `regions` - `Array` of `String`\n  - specifies one or more region identifiers to deploy to. A wildcard\n    can be used to signify deployment to all supported regions by the\n    provider\n- `files` - `Array` of `String`\n  - specifies a whitelist of what files have to be deployed\n\nTo supply provider-specific configuration, you can include an arbitrary `Object` and use the provider identifier as the key.\n\n## <span id=\"global-config\">Global Configuration</span>\n\nThe client will initialize a `.now` directory in the user's home\ndirectory upon first running.\n\nThere, two files can be found:\n\n- `config.json`\n- `auth.json`\n\n## Implementation notes\n\nNow is directly modeled after UNIX. It's useful to think of the primary subcommands `deploy`, `alias` and `rm` as being the \"cloud equivalents\" of `cp`, `ln` and `rm`.\n\nThe minimal set of commands that providers must supply are:\n\n<table>\n  <tr>\n    <td><code>[]</code> | <code>deploy</code></td>\n    <td>the default command to launch a deployment</td>\n  </tr>\n  <tr>\n\t<td><code>remove</code> | <code>rm</code></td>\n\t<td>remove a deployment identified by its unique URL</td>\n  </tr>\n</table>\n\nRecommended, but not required, commands are:\n\n<table>\n  <tr>\n    <td><code>alias</code> | <code>ln</code></td>\n    <td>associates a URL with a permanent domain name</td>\n  </tr>\n  <tr>\n    <td><code>secrets</code> <code>ls</code> | <code>rm</code> | <code>add</code></td>\n    <td>manage deployment secrets</td>\n  </tr>\n  <tr>\n  \t<td><code>domains</code> <code>ls</code> | <code>add</code> | <code>rm</code></td>\n  \t<td>manage domains</td>\n  </tr>\n  <tr>\n  \t<td><code>dns</code> <code>ls</code> | <code>add</code> | <code>rm</code></td>\n  \t<td>manage dns records</td>\n  </tr>\n  <tr>\n<td><code>certs</code> <code>ls</code> | <code>add</code> | \t<code>rm</code></td>\n\t<td>manage certificates</td>\n  </tr>\n</table>\n\nThe `build` step for serverless deployments is implemented locally and is compatible with projects configured with the `type` `node`, and others are on the way!\n\n## Philosophy\n\n### Immutability\n\nEach time you write `now` a new deployment is provisioned. Whenever\npossible, providers should strive to make deployments idempotent in the\nabsence of changes to:\n\n- Originating source code\n- Configuration\n- Environment variables\n\n### Standards compliance\n\nAll projects expose a HTTP/1.1-compatible interface. A port is provided\nvia the standard `process.env.PORT`.\n\n### Secure\n\nWhenever possible, deployments are strongly encouraged to be served over SSL. The process of provisioning certificates should be transparent to the user.\n\n### Projects should require minimal JSON configuration\n\nWhenever possible, projects should be deployable with minimal or no configuration.\n\n### Avoid manifest duplication\n\nIf the configuration or conventions imposed by a programming language\nor framework are present, attempt to provide sane defaults.\n\nExamples of this is the presence of `Dockerfile` or `package.json`. When\npublishing a project it's recommended that the [`type`](#type) is strictly\nconfigured in [`now.json`](#now-json) to avoid\n\n## Contributions and Roadmap\n\n#### Community\n\nAll feedback and suggestions are welcome!\n\n- 💬 Chat: Join us on [zeit.chat](https://zeit.chat) `#now-client`.\n- 📣 Stay up to date on new features and announcments on [@zeithq](https://twitter.com/zeithq).\n- 🔐 Subscribe to our [security](http://zeit.us12.list-manage1.com/subscribe?u=3c9e9e13d7e6dae8faf375bed&id=110e586914) mailing list to stay up-to-date on urgent security disclosures.\n\nPlease note: we adhere to the [contributor coventant](http://contributor-covenant.org/) for\nall interactions in our community.\n\n#### Contributions\n\nTo get started contributing, make sure you're running `node` `8.x.x`. Clone this repository:\n\n```\ngit clone https://github.com/zeit/now-cli\n```\n\nTo test the [`pkg`](https://github.com/zeit/pkg) binary distribution, run:\n\n```\nnpm run build\n```\n\n#### Ongoing development\n\n- Support for `now <file>`, with support for:\n\t- Binaries as a first-class deployment type\n\t- Static deployments as a fallback\n- We are working on built-in support for provisioning [Kubernetes](https://kubernetes.io/)\n  replication controllers and pods, in a similar vein as the [Draft](https://github.com/azure/draft) project.\n- A simple API to register custom providers and pluggable build systems externally, such as Travis, Circle CI, etc.\n- A companion desktop app [Now Desktop](https://github.com/zeit/now-desktop)\n  is available, released under the MIT license.\n  Work is ongoing for pluggable providers to enable:\n  - Team collaboration\n  - One-click context switch\n  - Drag and drop deployments\n- Adding interoperabity between objects that live in different providers\n- Providing a Next.js and React powered dashboard that can be deployed anywhere\n\n## Why Ship a `pkg`-ed Binary?\n\n- Simpler installation for non-Node users like those deploying [static files](https://zeit.co/blog/unlimited-static) or [Dockerfiles](https://zeit.co/blog/now-dockerfile).\n- Consistency across platforms and installation mechanisms (`npm`, `brew` and manual scripts)\n- Parsing and evaluation optimizations lead to a faster bootup time\n- Easier installation in automation environments (like CI systems)\n- Increased safety by providing a unified signature mechanism for releases\n- We're able to select our own Node version of choice and can take advantage of the latest features\n\n## Caught a Bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm run link` (not `npm link`)\n3. You can now start using `now` from the command line!\n\nAs always, you can use `npm test` to run the tests and see if your changes have broken anything.\n\n## How to Do a Release (Internal)\n\n- **Stable release:** Run `release <major|minor|patch>` (depending on the version bump you're planning to do) on the `master` branch.\n\n- **Canary release:** Run `release pre` on the `canary` branch.\n\nOther than one of these two commands, **no other action is required**. The CI will take care of the rest.\n\n## Authors\n\n- Guillermo Rauch ([@rauchg](https://twitter.com/rauchg)) - [ZEIT](https://zeit.co)\n- Leo Lamprecht ([@notquiteleo](https://twitter.com/notquiteleo)) - [ZEIT](https://zeit.co)\n- Tony Kovanen ([@TonyKovanen](https://twitter.com/TonyKovanen)) - [ZEIT](https://zeit.co)\n- Olli Vanhoja ([@OVanhoja](https://twitter.com/OVanhoja)) - [ZEIT](https://zeit.co)\n- Naoyuki Kanezawa ([@nkzawa](https://twitter.com/nkzawa)) - [ZEIT](https://zeit.co)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zeit/now-cli.git"
  },
  "scripts": {
    "build": "webpack",
    "build-download": "webpack --context download --config download/webpack.config.js",
    "bundle": "pkg dist/now.js -c package.json -o packed/now --options no-warnings",
    "dev": "webpack -w",
    "gzip": "ls packed/now* | xargs gzip -k",
    "link": "webpack && cd link && npm link",
    "lint": "eslint .",
    "pack": "rm -rf packed && webpack && npm run bundle && npm run gzip",
    "postinstall": "node download/install.js",
    "precommit": "lint-staged",
    "prepublishOnly": "npm run build-download && cp /dev/null download/dist/now",
    "test": "ava"
  },
  "version": "9.3.3"
}
